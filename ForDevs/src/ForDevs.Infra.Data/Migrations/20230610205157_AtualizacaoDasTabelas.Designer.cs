// <auto-generated />
using System;
using ForDevs.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ForDevs.Infra.Data.Write.Migrations
{
    [DbContext(typeof(ForDevsContext))]
    [Migration("20230610205157_AtualizacaoDasTabelas")]
    partial class AtualizacaoDasTabelas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ForDevs.Domain.Models.Avaliacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataDeReferencia")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("ForDevs.Domain.Models.AvaliacaoCliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AvaliacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotivoNota")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Nota")
                        .HasColumnType("decimal(3,1)");

                    b.HasKey("Id");

                    b.HasIndex("AvaliacaoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("AvaliacoesClientes");
                });

            modelBuilder.Entity("ForDevs.Domain.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DateDeCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeContato")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomeDoCliente")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ForDevs.Domain.Models.AvaliacaoCliente", b =>
                {
                    b.HasOne("ForDevs.Domain.Models.Avaliacao", "Avaliacao")
                        .WithMany("AvaliacaoClientes")
                        .HasForeignKey("AvaliacaoId")
                        .IsRequired();

                    b.HasOne("ForDevs.Domain.Models.Cliente", "Cliente")
                        .WithMany("AvaliacaoClientes")
                        .HasForeignKey("ClienteId")
                        .IsRequired();

                    b.Navigation("Avaliacao");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ForDevs.Domain.Models.Avaliacao", b =>
                {
                    b.Navigation("AvaliacaoClientes");
                });

            modelBuilder.Entity("ForDevs.Domain.Models.Cliente", b =>
                {
                    b.Navigation("AvaliacaoClientes");
                });
#pragma warning restore 612, 618
        }
    }
}
